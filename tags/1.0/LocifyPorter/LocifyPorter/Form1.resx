<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="mainMenu1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
  <metadata name="$this.FormFactorShadowProperty" xml:space="preserve">
    <value>Pocket_PC</value>
  </metadata>
  <metadata name="$this.Skin" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAAAGACoDAAAJgAAABAQAAAAABgAaAMAAM4MAAAoAAAAIAAAAEAAAAABABgAAAAAAAAM
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/v7+/Pz89/f39fX16+vr6enp6enp
        3d3d2dnZ2dnZ2tra5+fn6enp6urq8vLy9vb2+/v7/f39/v7+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAA/v7+AAAAx///qPT/juD/eNL/Y8T/Trj/Oqz/JqH/FZn/IJ7/M6j/SbX/XMD/cMz/htr/
        m+f/tfr/2P//4+Pj+/v7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHJz/AI//AI//AI//
        AI//AI//AI//AI//AI//AI//AI//AI//AI//AI//AI//AI//AI//AI//BZH/kuD/5eXlAAAAAAAAAAAA
        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
        AACAAQAA/jcAAA==
</value>
  </data>
</root>